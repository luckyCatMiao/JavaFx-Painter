apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'javafx-gradle-plugin'

def mclass= "Paint.Main"
version '1.0'
sourceCompatibility = 1.8
mainClassName = mclass
buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }
    repositories {
        mavenLocal()
        mavenCentral()

    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}




jfx {
    // minimal requirement for jfxJar-task
    mainClass = mclass
    
    // minimal requirement for jfxNative-task
    vendor = 'CatSoftware'
}


jar {
    doFirst {
        manifest {
            attributes(
            		
                    'Class-Path': configurations.runtimeClasspath.files.collect { "lib/"+it.getName() }.join(' '),
                    'Main-Class': mclass)

        }
    }
}



tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {

	// https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20160810'
    
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'


}

task copyJar(type: Copy) {
    from configurations.runtime
    into('build/libs/lib')

}
task copyData(type: Copy) {
    from ('_res')
    into('build/libs/_res')

}

//把JAR复制到目标目录
task release(type: Copy, dependsOn: [build, copyJar,copyData]) {

}


